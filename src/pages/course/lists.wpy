<style lang="less">
@import "./src/less/config";
page {
  background: @bg-color;
  width: 100%;
  height: 100%;
  > view {
    width: 100%;
    height: 100%;
  }
}
radio-group {
  margin: 20rpx;
  display: flex;
  align-items: baseline;
  .title {
    margin-right: 20rpx;
  }
  .radios {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    > label {
      margin-right: 20rpx;
      border-radius: 6rpx;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 4rpx 12rpx;
      margin: 0rpx 20rpx 10rpx 0rpx;
      font-size: 28rpx;
      color: @base-color;
      border: 2rpx solid @base-color;
      &.checked {
        background: @base-color;
        color: #fff;
      }
    }
  }
}
/*  重写 radio 样式  */
radio .wx-radio-input {
  display: none;
}
.tabs {
  position: fixed;
  width: calc(~"100% - 50rpx");
  display: flex;
  background: #fff;
  font-size: 28rpx;
  padding: 0 20rpx;
  height: 30px;
  z-index: 100;
  .tab {
    text-align: center;
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    .iconfont {
      margin-left: 5rpx;
      transition: all 0.5s ease;
      &.asc {
        transition: all 0.5s ease;
        transform: rotateX(180deg);
      }
    }
    text {
      color: #888;
      font-size: 24rpx;
    }
  }
}
.main {
  padding-top: 30px;
}
.pop-right {
  font-size: 28rpx;
  width: 100%;
  z-index: 1000;
  height: 100%;
  position: fixed;
  display: flex;
  transition: all 0.5s ease-out;
  margin-right: -105%;
  background: #fff;
  right: 0;
  &.show {
    transition: all 0.5s ease-in;
    margin-right: 0%;
  }
  .header {
    position: fixed;
    background: #f6f6f6;
    width: 100%;
    padding: 20rpx;
  }
  .title {
    color: #888;
  }
  .form {
    margin-top: 100rpx;
    .card {
      border-bottom: 2rpx solid #ddd;
      margin-top: 20rpx;
      .title {
        font-size: 26rpx;
        color: #555;
        padding-left: 20rpx;
      }
    }
  }
  .footer {
    position: fixed;
    background: #f6f6f6;
    width: 100%;
    padding: 20rpx;
    bottom: 0;
    button {
      display: inline-block;
      margin-right: 20rpx;
      border: 2rpx solid @base-color;
      background: transparent;
      color: @base-color;
      font-size: 28rpx;
      &:hover {
        background: @base-color;
        color: #fff;
      }
    }
  }
}
</style>

<template>
  <view>
    <view class="tabs">
      <view @tap="search" class="tab">
        <view class="iconfont icon-search"></view>
      </view>
      <view class="tab order" @tap="orderHandler">
        <view>
          {{orderNames[orderIndex]}}
        </view>
        <view class="iconfont icon-jiantouarrow483 {{orderIndex % 2 == 1 ? 'asc' : ''}}"></view>
      </view>
      <view class="tab" @tap="showFilter">
        筛选
      </view>
    </view>
    <view class="pop-right {{isShowFilter ? 'show' : ''}}">
      <form @submit="submit" @reset="reset">
        <view class="header">
          <view class="title">
            筛选
          </view>
        </view>
        <scroll-view style="height: {{height-190}}px;" scroll-y class="form">
          <block wx:for="{{filters}}" wx:key="index">
            <view class="card">
              <view class="title">
                {{item.title}}
              </view>
              <radio-group name="{{item.name}}" class="radio-group">
                <view class="radios">
                  <block wx:for="{{item.radios}}" wx:key="i" wx:for-item="radio" wx:for-index="i">
                    <label @tap="checked({{index}},{{i}})" class="{{radio.checked ? 'checked' : ''}}">
                      <radio value="{{radio.value}}" checked="{{radio.checked}}" />{{radio.name}}</label>
                  </block>
                </view>
              </radio-group>
            </view>
          </block>
        </scroll-view>
        <view class="footer">
          <button formType="submit">提交</button>
          <button formType="reset">重置</button>
          <button @tap="showFilter">关闭</button>
        </view>
      </form>
    </view>
    <scroll-view style="height: {{height}}px;" scroll-y class="main" @scrolltolower="more">
      <repeat for="{{courses}}" item="data" key="index">
        <Card :item.sync="data"></Card>
      </repeat>
    </scroll-view>
  </view>
</template>

<script>
import wepy from "wepy";
import HttpMixin from "../../mixins/http";
import ToastMixin from "../../mixins/toast";
import db from "../../util/db";
import DataMixin from "../../mixins/data";
import Card from "../../components/course/card";
const orders = ["lesson_id-asc", "lesson_id-desc", "class_hour-asc", "class_hour-desc","credit-asc", "credit-desc"];
export default class CourseLists extends wepy.page {
  config = {
    navigationBarTitleText: "寻课"
  };
  mixins = [HttpMixin, ToastMixin];
  components = {
    Card: Card
  };
  data = {
    isShowFilter: false,
    courses: [],
    page: 1,
    page_size: 15,
    height: 500,
    isEmpty: false,
    params: {
      classHour: "",
      credit: "",
      type: "",
      examType: "",
      college: "",
      day: "",
      session:""
    },
    order: "lesson_id-asc",
    orderNames: ["课程号", "课程号", "课时","课时","学分","学分"],
    orderIndex: 0,
    filters: [
      {
        name: "classHour",
        title: "课时",
        radios: [
          {
            name: "12课时",
            value: 12,
            checked: false
          },
          {
            name: "16课时",
            value: 16,
            checked: false
          },
          {
            name: "24课时",
            value: 24,
            checked: false
          },
          {
            name: "32课时",
            value: 32,
            checked: false
          },
          {
            name: "48课时",
            value: 48,
            checked: false
          },
          {
            name: "64课时",
            value: 64,
            checked: false
          },
          {
            name: "80课时",
            value: 80,
            checked: false
          },
          {
            name: "96课时",
            value: 96,
            checked: false
          },
          {
            name: "128课时",
            value: 128,
            checked: false
          },
          {
            name: "160课时",
            value: 160,
            checked: false
          },
          {
            name: "192课时",
            value: 192,
            checked: false
          }
        ]
      },
      {
        name: "credit",
        title: "学分",
        radios: [
          {
            name: "1学分",
            value: 1,
            checked: false
          },
          {
            name: "2学分",
            value: 2,
            checked: false
          },
          {
            name: "3学分",
            value: 3,
            checked: false
          },
          {
            name: "4学分",
            value: 4,
            checked: false
          },
          {
            name: "5学分",
            value: 5,
            checked: false
          },
          {
            name: "6学分",
            value: 6,
            checked: false
          },
          {
            name: "8学分",
            value: 8,
            checked: false
          },
          {
            name: "10学分",
            value: 10,
            checked: false
          },
          {
            name: "12学分",
            value: 12,
            checked: false
          }
        ]
      },
      {
        name: "type",
        title: "课程类型",
        radios: [
          {
            name: "基础课",
            value: "基础课",
            checked: false
          },
          {
            name: "专业基础课",
            value: "专业基础课",
            checked: false
          },
          {
            name: "专业课",
            value: "专业课",
            checked: false
          },
          {
            name: "必修课",
            value: "必修课",
            checked: false
          },
          {
            name: "限选课",
            value: "限选课",
            checked: false
          },
          {
            name: "任选课",
            value: "任选课",
            checked: false
          }
        ]
      },
      {
        name: "examType",
        title: "考核方式",
        radios: [
          {
            name: "考试",
            value: "考试",
            checked: false
          },
          {
            name: "考查",
            value: "考查",
            checked: false
          }
        ]
      },
      {
        name: "college",
        title: "所属学院",
        radios: [
          {
            name: "基础教学学院",
            value: "基础教学学院",
            checked: false
          },
          {
            name: "计算机与软件学院",
            value: "计算机与软件学院",
            checked: false
          },
          {
            name: "数字艺术与设计学院",
            value: "数字艺术与设计学院",
            checked: false
          },
          {
            name: "智能与电子工程学院",
            value: "智能与电子工程学院",
            checked: false
          },
          {
            name: "信息与商务管理学院",
            value: "信息与商务管理学院",
            checked: false
          },
          {
            name: "创新创业学院",
            value: "创新创业学院",
            checked: false
          },
          {
            name: "国际教育学院",
            value: "国际教育学院",
            checked: false
          },
          {
            name: "高等职业技术学院",
            value: "高等职业技术学院",
            checked: false
          },
          {
            name: "外国语学院",
            value: "外国语学院",
            checked: false
          }
        ]
      },
      {
        name: "day",
        title: "上课日期",
        radios: [
          {
            name: "周一",
            value: 1,
            checked: false
          },
          {
            name: "周二",
            value: 2,
            checked: false
          },
          {
            name: "周三",
            value: 3,
            checked: false
          },
          {
            name: "周四",
            value: 4,
            checked: false
          },
          {
            name: "周五",
            value: 5,
            checked: false
          },
          {
            name: "周六",
            value: 6,
            checked: false
          },
          {
            name: "周日",
            value: 7,
            checked: false
          }
        ]
      },
      {
        name: "session",
        title: "上课节次",
        radios: [
         {
            name: "第一大节",
            value: 1,
            checked: false
          },
          {
            name: "第二大节",
            value: 4,
            checked: false
          },
          {
            name: "第三大节",
            value: 5,
            checked: false
          },
          {
            name: "第四大节",
            value: 7,
            checked: false
          },
          {
            name: "第五大节",
            value: 9,
            checked: false
          }
        ]
      }
    ]
  };
  methods = {
    search() {
      wepy.navigateTo({
        url: "/pages/course/search"
      });
    },
    orderHandler() {
      const self = this;
      wepy.showActionSheet({
        itemList: ["课程号顺序", "课程号逆序", "课时顺序", "课时逆序","学分顺序","学分逆序"],
        success: function(res) {
          self.orderIndex = res.tapIndex;
          self.order = orders[res.tapIndex];
          self.page = 1;
          self.$apply();
          self.getCourses();
        }
      });
    },
    more() {
      this.page++;
      this.getCourses();
    },
    submit(e) {
      this.page = 1;
      this.params = e.detail.value;
      this.getCourses();
      this.isShowFilter = false;
    },
    reset() {
      for (let i = 0; i < this.filters.length; i++) {
        for (let m = 0; m < this.filters[i].radios.length; m++) {
          this.filters[i].radios[m].checked = false;
        }
      }
    },
    showFilter() {
      this.isShowFilter = !this.isShowFilter;
    },
    checked(i, j) {
      for (let m = 0; m < this.filters[i].radios.length; m++) {
        if (m != j) this.filters[i].radios[m].checked = false;
      }
      this.filters[i].radios[j].checked = !this.filters[i].radios[j].checked;
    }
  };
  newCourse(courses) {
    for (let i = 0; i < courses.length; i++) {
      const course = courses[i];
      let teachers = courses[i].teachers.split(",");
      let is_more = teachers.length > 1 ? "等" : "";
      courses[i].teachers = teachers[0] + is_more;
    }
    return courses;
  }
  async getCourses() {
    if (this.page > 1 && this.isEmpty) {
      this.ShowToast("已经到底了！");
      return;
    }
    if (this.page == 1) {
      this.isEmpty = false;
    }
    const resp = await this.GET(
      "/course/all",
      Object.assign(
        {
          page: this.page,
          page_size: this.page_size,
          order: this.order
        },
        this.params
      )
    );
    if (this.page > 1) {
      this.courses = this.courses.concat(this.newCourse(resp.data));
    } else {
      this.courses = this.newCourse(resp.data);
    }
    if (resp.data.length === 0) {
      this.isEmpty = true;
    }
    this.$apply();
  }
  onLoad() {
    this.getCourses();
    this.height = wx.getSystemInfoSync().screenHeight - 25;
  }
}
</script>
